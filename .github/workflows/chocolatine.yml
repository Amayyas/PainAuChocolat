name: Pain Au Chocolat

on:
  push:
    branches-ignore:
      - ga-ignore-*
  pull_request:
    branches-ignore:
      - ga-ignore-*

env:
  MIRROR_URL: 'git@github.com:Amayyas/PainAuChocolat_Tester.git'
  EXECUTABLES: add

jobs:
  check_coding_style:
    name: Check Coding Style
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Run coding style checker
        run: check.sh $(pwd) $(pwd)
      - name: Annotate coding style errors
        if: failure()
        run: |
          while IFS= read -r line; do
            echo "::error file=${{ github.event.head_commit.id }},line=${line}::Coding style error"
          done < coding-style-reports.log

  check_program_compilation:
    name: Check Program Compilation
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker
    needs: check_coding_style
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Compile program
        run: make
      - name: Clean build
        run: make clean
      - name: Verify executables
        run: |
          IFS=',' read -ra EXEC <<< "$EXECUTABLES"
          for exe in "${EXEC[@]}"; do
            if [[ ! -x "$exe" ]]; then
              echo "::error file=$exe::Executable not found or not executable"
              exit 1
            fi
          done

  run_tests:
    name: Run Tests
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker
    needs: check_program_compilation
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Run tests
        run: make tests_run

  push_to_mirror:
    name: Push to Mirror Repository
    runs-on: ubuntu-latest
    needs: run_tests
    if: github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Push to mirror
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}